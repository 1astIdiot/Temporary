{"version":3,"sources":["webpack://robotic/./src/assets/intro.mp4","webpack://robotic/./src/assets/image_5.png","webpack://robotic/./src/components/home-page/IntroBlock.tsx","webpack://robotic/./src/components/home-page/DescriptionBlock.tsx","webpack://robotic/./src/images/cnc.png","webpack://robotic/./src/images/robot2.png","webpack://robotic/./src/images/robot3.png","webpack://robotic/./src/images/specialist1.png","webpack://robotic/./src/images/specialist2.png","webpack://robotic/./src/images/specialist4.png","webpack://robotic/./src/images/specialist5.png","webpack://robotic/./src/images/specialist6.png","webpack://robotic/./src/constants/home-page.ts","webpack://robotic/./src/components/home-page/IndustryMediaModal.tsx","webpack://robotic/./src/components/home-page/IndustriesBlock.tsx","webpack://robotic/./src/images/high-five.png","webpack://robotic/./src/components/home-page/DemonstrationBlock.tsx","webpack://robotic/./src/icons/IPlus.tsx","webpack://robotic/./src/components/home-page/AutomationModalContent.tsx","webpack://robotic/./src/components/home-page/AutomationModal.tsx","webpack://robotic/./src/components/home-page/AutomationBlock.tsx","webpack://robotic/./src/components/home-page/RobotInfoBlock.tsx","webpack://robotic/./src/components/home-page/SpecialistsBlock.tsx","webpack://robotic/./src/components/home-page/RequestBlock.tsx","webpack://robotic/./src/components/home-page/RequestModal.tsx","webpack://robotic/./src/pages/index.tsx"],"names":["Wrapper","Container","BackgroundVideoContainer","BackgroundImageContainer","BackgroundImage","BackgroundVideo","IntroTextContainer","IntroTextHeader","props","variant","FeaturesList","StyledButton","Button","featuresList","showRequestModal","useState","isTextShown","toggleTextShown","textShowStyles","window","screen","width","src","introImage","alt","onPause","autoPlay","muted","introVideo","css","map","item","key","onClick","Title","Text","TextContainer","RobotImageStyles","S","industries","MATERIALS_TRANSFER","id","title","EQUIPMENT_MAINTENANCE","WELDING","CASTING","FORGING","SPRAY_COATING","PROCESSING_OPERATIONS","PARTS_ASSEMBLY","QUALITY_CONTROL","tags","METAL_WORKING","color","colors","url","ELECTRONICS","AUTO_INDUSTRY","FOOD_INDUSTRY","LOGISTICS","PHARMACOLOGY_CHEMICAL","ELECTRICAL_ENGINEERING","FURNITURE","materialsTransferTags","equipmentMaintenanceTags","weldingTags","castingTags","forgingTags","sprayCoatingTags","processingOperationsTags","partsAssemblyTags","qualityControlTags","industriesBlocks","text","mediaId","industryMedia","automationItemIds","automationItems","image","imageCNC","imageRobot2","imageRobot3","automationCNCInfo","textLeftColumn","textRightColumn","pros","cons","automationIndustrialRobotInfo","undefined","automationCobotInfo","specialists","name","position","responsibilities","tel","email","imageSpecialist1","imageSpecialist2","imageSpecialist4","imageSpecialist5","imageSpecialist6","StylesForScrollbar","CurrentVideoTitle","VideoTitle","StyledImg","Image","state","setState","activeMedia","setActiveMedia","useEffect","length","height","frameBorder","allow","allowFullScreen","index","publicUrl","IndustryTilesContainer","IndustryItemContainer","IndustryMainContainer","IndustryItemHeader","IndustryTags","IndustryTag","lighten","IndustryMediaButton","ButtonCorner","IndustryItem","onOpen","isMediaNotEmpty","isShown","modalState","setModalState","onClose","ImageContainer","DescriptionContainer","imageHighFive","viewBox","fill","xmlns","fillRule","clipRule","d","ContentContainer","FeaturesTitle","SignContainer","FeatureContainer","FeaturesInnerContainer","Circle","ProsIcon","ConsIcon","StyledFeatureItem","FeaturesListItem","dangerouslySetInnerHTML","__html","Footer","Flex","FooterLeftColumn","FooterRightColumn","FooterTitle","FooterCaption","FooterImageStyles","FooterContactTel","dimensions","FooterContactsEmail","automationId","getModalContentProps","href","AutomationTilesContainer","TileContainer","AutomationItemTitle","AutomationItemText","AutomationTile","rest","SubTitle","SpecialistImage","SpecialistImageContainer","SpecialistContainer","SpecialistsContainer","SpecialistName","Position","Responsibilities","Contacts","Specialist","FlexContainer","LeftColumn","RightColumn","breakpoints","isRequestModalShown","toggleRequestModal"],"mappings":"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","file":"component---src-pages-index-tsx-26ff25fb5c8b2ff691bd.js","sourcesContent":["export default __webpack_public_path__ + \"static/intro-5450ceea4d1e069406a59ae14fb7b948.mp4\";","export default __webpack_public_path__ + \"static/image_5-47c1c3e19079f056f160a1e3ff4b1313.png\";","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nimport { Button, Container, Typography } from 'components';\n\nimport introVideo from 'assets/intro.mp4';\nimport introImage from 'assets/image_5.png';\n\nconst Wrapper = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  position: relative;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    flex-direction: column;\n  }\n`;\n\nconst BackgroundVideoContainer = styled.div`\n  display: flex;\n  width: 1100px;\n  height: 620px;\n  margin-left: -200px;\n  position: relative;\n  overflow: hidden;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 100%;\n    margin-left: 0px;\n  }\n`;\n\nconst BackgroundImageContainer = styled.div`\n  display: flex;\n  position: relative;\n  overflow: hidden;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 100%;\n    margin: 0 auto;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst BackgroundImage = styled.image`\n  //position: absolute;\n  //top: 52%;\n  //left: 55%;\n  //transform: translate(-50%, -50%);\n  //z-index: -1;\n`;\n\nconst BackgroundVideo = styled.video`\n  position: absolute;\n  top: 52%;\n  left: 55%;\n  transform: translate(-50%, -50%);\n  z-index: -1;\n`;\n\nconst IntroTextContainer = styled.div`\n  width: 50%;\n  z-index: 1;\n  position: absolute;\n  left: 50%;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    position: relative;\n    width: auto;\n\n    margin-top: 50px;\n    //margin-left: 16px;\n    //margin-right: 18px;\n    margin-bottom: 0px;\n    left: inherit;\n  }\n`;\n\nconst IntroTextHeader = styled<React.FC>((props) => <Typography variant='h0' {...props} />)`\n  visibility: hidden;\n  margin-bottom: 40px;\n  opacity: 0;\n  transition: 1s opacity;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    opacity: 1;\n    visibility: visible;\n    font-size: 24px;\n    line-height: 28px;\n\n    width: 85%;\n\n    margin-bottom: 30px;\n  }\n`;\n\nconst FeaturesList = styled.ul`\n  visibility: hidden;\n  margin-bottom: 60px;\n  opacity: 0;\n  transition-property: opacity;\n  transition-delay: 1s;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    visibility: visible;\n    opacity: 1;\n    margin-bottom: 40px;\n    width: 85%;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  visibility: hidden;\n  opacity: 0;\n  transition-property: opacity;\n  transition-delay: 2s;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    visibility: visible;\n    opacity: 1;\n  }\n`;\n\nconst featuresList = [\n  '10-летний опыт автоматизации',\n  'множество выполненных проектов',\n  'большая команда специалистов',\n  'работаем с мировыми лидерами производителей коботов',\n];\n\ninterface IntroBlockProps {\n  showRequestModal: () => void;\n}\n\nconst IntroBlock: React.FC<IntroBlockProps> = (props) => {\n  const {\n    showRequestModal,\n  } = props;\n\n  const [isTextShown, toggleTextShown] = useState<boolean>(false);\n\n  const textShowStyles = isTextShown && css`\n    visibility: visible;\n    opacity: 1;\n\n  `;\n\n  if (typeof window === \"undefined\") { return(<></>); }\n\n  return (\n    <Wrapper>\n        {\n          (typeof window === \"undefined\") ?\n            (\n                <BackgroundImageContainer>\n                  <BackgroundImage>\n                    <img src={introImage} alt=\"img\" />\n                  </BackgroundImage>\n                </BackgroundImageContainer>\n            )\n            : (window.screen.width >= 320 && window.screen.width <= 480) ? (\n                <BackgroundImageContainer>\n                  <BackgroundImage>\n                    <img src={introImage} alt=\"img\" />\n                  </BackgroundImage>\n                </BackgroundImageContainer>\n              )\n            : (\n          <BackgroundVideoContainer>\n          <BackgroundVideo\n          onPause={() => toggleTextShown(true)}\n          autoPlay\n          muted\n          >\n          <source src={introVideo} />\n          </BackgroundVideo>\n          </BackgroundVideoContainer>\n          )\n        }\n\n      <IntroTextContainer>\n        <IntroTextHeader css={textShowStyles}>\n          Forest Valley Robotics – интегратор коллаборативных роботов\n        </IntroTextHeader>\n\n        <FeaturesList\n          css={textShowStyles}\n        >\n          {featuresList.map(item => (\n            <li key={item}>\n              <Typography variant='body1'>\n                – {item}\n              </Typography>\n            </li>\n          ))}\n        </FeaturesList>\n\n        <StyledButton\n          css={textShowStyles}\n          onClick={() => showRequestModal()}\n        >\n          Получить консультацию\n        </StyledButton>\n      </IntroTextContainer>\n    </Wrapper>\n  );\n};\n\nexport default IntroBlock;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nimport { Container, Typography } from 'components';\n\nconst Wrapper = styled(Container)`\n  flex-direction: row;\n`;\n\nconst Title = styled<React.FC>((props) => <Typography variant='h1' {...props} />)`\n  margin-bottom: 40px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    font-family: Roboto;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 28px;\n    letter-spacing: 0.005em;\n    text-align: left;\n\n    margin-bottom: 30px;\n  }\n`;\n\nconst Text = styled<React.FC>((props) => <Typography variant='body1' {...props} />)`\n  width: 486px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 287px;\n    //styleName: Body 1;\n    font-family: Roboto;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 26px;\n    letter-spacing: 0em;\n    text-align: left;\n\n  }\n`;\n\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-grow: 1;\n  padding-left: 127px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    padding-left: inherit;\n    margin-left: 16px;\n    margin-right: 18px;\n    margin-bottom: 50px;\n  }\n`;\n\nconst RobotImageStyles = css`\n  margin-right: -8px;\n`;\n\nconst DescriptionBlock: React.FC = () => {\n\n  return (\n    <Wrapper>\n      <TextContainer>\n        <Title>\n          Что такое робот?\n        </Title>\n\n        <Text>\n          Определение от International Federation of Robotics (далее — IFR): «Робот — это рабочий механизм, программируемый\n          по нескольким осям некоторой степенью автономности\n          и способный передвигаться в пределах определённой среды, выполняя поставленные задачи».\n          <br />\n          <br />\n          В производстве роботы - это многоосевые манипуляторы («руки») со сменными инструментами, от обычного захвата\n          до отвертки или сварочного аппарата.\n        </Text>\n      </TextContainer>\n\n      <StaticImage css={RobotImageStyles} src='../../images/robot1.png' alt='robot' />\n    </Wrapper>\n  );\n};\n\nexport default DescriptionBlock;\n","export default __webpack_public_path__ + \"static/cnc-97435b5e4e6ca33dfa76be7d2df38ff0.png\";","export default __webpack_public_path__ + \"static/robot2-fa6ec216c7f333d5cfb038daf07badfd.png\";","export default __webpack_public_path__ + \"static/robot3-7740a55c214f1c5eaf36c240ffe3b2d9.png\";","export default __webpack_public_path__ + \"static/specialist1-a6f198cbde477a9b2c8101864318c1f5.png\";","export default __webpack_public_path__ + \"static/specialist2-cb189df95254b49b6754fe8be9c0fdce.png\";","export default __webpack_public_path__ + \"static/specialist4-71850c3653c10dddbfaba596722bfbd1.png\";","export default __webpack_public_path__ + \"static/specialist5-f460cb2c6b2ee94741bffaf472fb8b82.png\";","export default __webpack_public_path__ + \"static/specialist6-f51e87015797929b4817fe240b6d873c.png\";","/* eslint-disable max-len */\nimport { colors } from 'styles/variables';\nimport imageCNC from 'images/cnc.png';\nimport imageRobot2 from 'images/robot2.png';\nimport imageRobot3 from 'images/robot3.png';\nimport imageSpecialist1 from 'images/specialist1.png';\nimport imageSpecialist2 from 'images/specialist2.png';\nimport imageSpecialist4 from 'images/specialist4.png';\nimport imageSpecialist5 from 'images/specialist5.png';\nimport imageSpecialist6 from 'images/specialist6.png';\nimport { AutomationIdTypes, Industries, Tag } from 'types/home-page';\n\nexport const industries: {\n  [key: string]: {\n    id: Industries;\n    title: string;\n  };\n} = {\n  MATERIALS_TRANSFER: {\n    id: 'MATERIALS_TRANSFER',\n    title: 'Перенос материалов',\n  },\n  EQUIPMENT_MAINTENANCE: {\n    id: 'EQUIPMENT_MAINTENANCE',\n    title: 'Обслуживание станков и машин ',\n  },\n  WELDING: {\n    id: 'WELDING',\n    title: 'Сварка и пайка',\n  },\n  CASTING: {\n    id: 'CASTING',\n    title: 'Литьё',\n  },\n  FORGING: {\n    id: 'FORGING',\n    title: 'Ковка и штамповка',\n  },\n  SPRAY_COATING: {\n    id: 'SPRAY_COATING',\n    title: 'Нанесение покрытий распылением',\n  },\n  PROCESSING_OPERATIONS: {\n    id: 'PROCESSING_OPERATIONS',\n    title: 'Различные операции обработки',\n  },\n  PARTS_ASSEMBLY: {\n    id: 'PARTS_ASSEMBLY',\n    title: 'Сборка механических и электронных деталей',\n  },\n  QUALITY_CONTROL: {\n    id: 'QUALITY_CONTROL',\n    title: 'Контроль качества продукции',\n  },\n};\n\nconst tags = {\n  METAL_WORKING: {\n    title: 'металлообработка',\n    color: colors.miscellaneous.blue300,\n    url: '/',\n  },\n  ELECTRONICS: {\n    title: 'электроника',\n    color: colors.miscellaneous.blue200,\n    url: '/',\n  },\n  AUTO_INDUSTRY: {\n    title: 'автопром',\n    color: colors.miscellaneous.blue100,\n    url: '/',\n  },\n  FOOD_INDUSTRY: {\n    title: 'пищепром',\n    color: colors.miscellaneous.gray100,\n    url: '/',\n  },\n  LOGISTICS: {\n    title: 'логистика',\n    color: colors.miscellaneous.green300,\n    url: '/',\n  },\n  PHARMACOLOGY_CHEMICAL: {\n    title: 'фарма и химпром',\n    color: colors.miscellaneous.green200,\n    url: '/',\n  },\n  ELECTRICAL_ENGINEERING: {\n    title: 'электротехника',\n    color: colors.miscellaneous.green100,\n    url: '/',\n  },\n  FURNITURE: {\n    title: 'мебель',\n    color: colors.miscellaneous.yellow100,\n    url: '/',\n  },\n};\n\nconst materialsTransferTags = [\n  tags.METAL_WORKING,\n  tags.ELECTRONICS,\n  tags.AUTO_INDUSTRY,\n  tags.FOOD_INDUSTRY,\n  tags.LOGISTICS,\n  tags.PHARMACOLOGY_CHEMICAL,\n  tags.ELECTRICAL_ENGINEERING,\n  tags.FURNITURE,\n];\n\nconst equipmentMaintenanceTags = [\n  tags.METAL_WORKING,\n  tags.ELECTRONICS,\n  tags.AUTO_INDUSTRY,\n  tags.FOOD_INDUSTRY,\n  tags.PHARMACOLOGY_CHEMICAL,\n  tags.ELECTRICAL_ENGINEERING,\n  tags.FURNITURE,\n];\n\nconst weldingTags = [\n  tags.METAL_WORKING,\n  tags.ELECTRONICS,\n  tags.AUTO_INDUSTRY,\n];\n\nconst castingTags = [\n  tags.METAL_WORKING,\n  tags.ELECTRONICS,\n  tags.AUTO_INDUSTRY,\n];\n\nconst forgingTags = [\n  tags.METAL_WORKING,\n  tags.ELECTRONICS,\n  tags.AUTO_INDUSTRY,\n  tags.FOOD_INDUSTRY,\n  tags.LOGISTICS,\n  tags.PHARMACOLOGY_CHEMICAL,\n  tags.ELECTRICAL_ENGINEERING,\n  tags.FURNITURE,\n];\n\nconst sprayCoatingTags = [\n  tags.METAL_WORKING,\n  tags.ELECTRONICS,\n  tags.AUTO_INDUSTRY,\n  tags.FURNITURE,\n];\n\nconst processingOperationsTags = [\n  tags.METAL_WORKING,\n  tags.ELECTRONICS,\n  tags.AUTO_INDUSTRY,\n  tags.FURNITURE,\n];\n\nconst partsAssemblyTags = [\n  tags.AUTO_INDUSTRY,\n  tags.ELECTRONICS,\n  tags.FURNITURE,\n];\n\nconst qualityControlTags = [\n  tags.METAL_WORKING,\n  tags.ELECTRONICS,\n  tags.AUTO_INDUSTRY,\n  tags.FOOD_INDUSTRY,\n  tags.LOGISTICS,\n  tags.PHARMACOLOGY_CHEMICAL,\n  tags.ELECTRICAL_ENGINEERING,\n  tags.FURNITURE,\n];\n\nexport const industriesBlocks: {\n  title: string;\n  text: string;\n  mediaId: Industries;\n  tags: Tag[];\n}[] = [\n    {\n      title: industries.MATERIALS_TRANSFER.title,\n      text: 'Перенос деталей и заготовок от станка к станку или с конвейера на конвейер, паллетирование, укладка деталей в тару, упаковка и т.п.',\n      mediaId: industries.MATERIALS_TRANSFER.id,\n      tags: materialsTransferTags,\n    },\n    {\n      title: industries.EQUIPMENT_MAINTENANCE.title,\n      text: 'Загрузка и разгрузка станков, удаление стружки, очистка рабочей зоны, удерживание обрабатываемой детали.',\n      mediaId: industries.EQUIPMENT_MAINTENANCE.id,\n      tags: equipmentMaintenanceTags,\n    },\n    {\n      title: industries.WELDING.title,\n      text: 'Полуавтоматическая дуговая, точечная и лазерная сварка, пайка.',\n      mediaId: industries.WELDING.id,\n      tags: weldingTags,\n    },\n    {\n      title: industries.CASTING.title,\n      text: 'Литьё под давлением, извлечение готовых изделий из пресс-форм.',\n      mediaId: industries.CASTING.id,\n      tags: castingTags,\n    },\n    {\n      title: industries.FORGING.title,\n      text: 'Закладка заготовок и их забор с укладкой в тару.',\n      mediaId: industries.FORGING.id,\n      tags: forgingTags,\n    },\n    {\n      title: industries.SPRAY_COATING.title,\n      text: '',\n      mediaId: industries.SPRAY_COATING.id,\n      tags: sprayCoatingTags,\n    },\n    {\n      title: industries.PROCESSING_OPERATIONS.title,\n      text: 'Сверление, фрезерование, клепание, гидроабразивная резка, обдирка, очистка, шлифовка, полировка.',\n      mediaId: industries.PROCESSING_OPERATIONS.id,\n      tags: processingOperationsTags,\n    },\n    {\n      title: industries.PARTS_ASSEMBLY.title,\n      text: 'Завинчивание, клепание, запрессовка.',\n      mediaId: industries.PARTS_ASSEMBLY.id,\n      tags: partsAssemblyTags,\n    },\n    {\n      title: industries.QUALITY_CONTROL.title,\n      text: 'С применением различных средств измерения (калибры, шаблоны, 3D сканеры, лазерные устройства)',\n      mediaId: industries.QUALITY_CONTROL.id,\n      tags: qualityControlTags,\n    },\n  ];\n\nexport const industryMedia: {\n  [key: string]: {\n    id: string;\n    title: string;\n  }[]\n} = {\n  [industries.MATERIALS_TRANSFER.id]: [\n    {\n      id: 'I7snXS6JIsA',\n      title: 'Перенос материалов',\n    },\n    {\n      id: '1Ob7PInf9UU',\n      title: 'Перенос материалов 2',\n    },\n    {\n      id: 'oKwjzIQOHNI',\n      title: 'Перенос материалов 3',\n    },\n    {\n      id: 'c9sdtfd2A4I',\n      title: 'Перенос материалов 4',\n    },\n    {\n      id: '9eVCQGU3bFI',\n      title: 'Перенос материалов 5',\n    },\n  ],\n  [industries.EQUIPMENT_MAINTENANCE.id]: [],\n  [industries.WELDING.id]: [],\n  [industries.CASTING.id]: [],\n  [industries.FORGING.id]: [\n    {\n      id: 'T525oxPipR8',\n      title: 'Ковка и штамповка',\n    },\n  ],\n  [industries.SPRAY_COATING.id]: [\n    {\n      id: 'FcmplSJhQU4',\n      title: 'Нанесение покрытий распылением',\n    },\n  ],\n  [industries.PROCESSING_OPERATIONS.id]: [\n    {\n      id: '1sZabfUFtO4',\n      title: 'Различные операции обработки',\n    },\n    {\n      id: 'Wrdc1JuMqDs',\n      title: 'Различные операции обработки 2',\n    },\n    {\n      id: 'PRrLeh2jOWI',\n      title: 'Различные операции обработки 3',\n    },\n    {\n      id: '_hmgHdKdVbk',\n      title: 'Различные операции обработки 4',\n    },\n  ],\n  [industries.PARTS_ASSEMBLY.id]: [\n    {\n      id: 'kReWhyA7G2w',\n      title: 'Сборка механических и электронных деталей',\n    },\n    {\n      id: 'VkDy8C-T1xU',\n      title: 'Сборка механических и электронных деталей',\n    },\n  ],\n  [industries.QUALITY_CONTROL.id]: [],\n};\n\nexport const automationItemIds: {\n  [key: string]: AutomationIdTypes;\n} = {\n  CNC: 'CNC',\n  INDUSTRIAL_ROBOT: 'INDUSTRIAL_ROBOT',\n  COBOTS: 'COBOTS',\n};\n\nexport const automationItems = [\n  {\n    id: automationItemIds.CNC,\n    title: 'Автоматизация \\nна системах с ЧПУ',\n    text: 'Это системы, собранные из простых компонентов - электромеханических, пневматических или гидравлических устройств: пушеров, линейных модулей и т.п.',\n    image: imageCNC,\n  },\n  {\n    id: automationItemIds.INDUSTRIAL_ROBOT,\n    title: 'Автоматизация \\nна промышленных роботах',\n    text: 'Промышленные роботы - это универсальные устройства с широким диапазоном возможностей: грузоподъёмностью от 2 до 3000 кг и большим радиусом рабочей зоны',\n    image: imageRobot2,\n  },\n  {\n    id: automationItemIds.COBOTS,\n    title: 'Автоматизация \\nна коллаборативных роботах',\n    text: 'Коллаборативные роботы, они же коботы, специально созданы для взаимодействия с человеком. Это устройства небольшого размера, веса и малым потреблением энергии.',\n    image: imageRobot3,\n  },\n];\n\n\ninterface AutomationInfo {\n  title: string;\n  textLeftColumn: string;\n  textRightColumn: string;\n  pros: { title: string; text?: string; }[];\n  cons: { title: string; text?: string; }[];\n}\n\nexport const automationCNCInfo: AutomationInfo = {\n  title: 'Автоматизация \\n на системах с ЧПУ',\n  textLeftColumn: `\n    Это системы, собранные из простых компонентов - электромеханических, пневматических\n    или гидравлических устройств: пушеров, модулей линейных перемещений, поворотных блоков,\n  `,\n  textRightColumn: `\n    конвейеров, стопперов и т.д., двух- и трехосевых манипуляторов, связанных системой\n    датчиков и управляемых программируемым контроллером.\n  `,\n  pros: [\n    {\n      title: 'Самое доступное решение.',\n      text: `\n        Дорогостоящий робот не применяется, всё собирается на универсальных компонентах,\n        добавляется кое-что разработанное конкретно под данную операцию. При вдумчивом\n        подходе такое решение получается самым эргономичным и лаконичным, идеально\n        выполняющим одну операцию. Рентабельно применять в массовом производстве с\n        программой выпуска на длительный период.\n      `,\n    },\n  ],\n  cons: [\n    {\n      title: 'При малейшем изменении техпроцесса всё придётся переделывать.',\n      text: `\n        Решение не универсальное, обладает ограниченной функциональностью. Например,\n        укладчик заготовок будет работать только с заготовками заданных параметров,\n        и для другого будет не применим. Для новой продукции многое придётся делать\n        заново, в том числе большинство механики.\n      `,\n    },\n  ],\n};\n\nexport const automationIndustrialRobotInfo: AutomationInfo = {\n  title: 'Автоматизация \\n на промышленных роботах',\n  textLeftColumn: `Промышленные роботы - это универсальные устройства с широким диапазоном возможностей:\n    грузоподъёмность от 2 до 3000 кг, радиус рабочей зоны от 500 до 4500мм, скорость\n    работы до 40м/с. Применяются в промышленности, например, `,\n  textRightColumn: `\n    при сборке автомобилей, в сварочных работах, переносе деталей и заготовок от станка к станку или с конвейера\n    на конвейер, штабелирование, работа с поддонами, укладка деталей в тару и т. п.\n  `,\n  pros: [\n    {\n      title: 'Поднимают до 3000 кг, перемещаются со скоростью до 40 м/с, радиус размаха до 4,5 метров.',\n      text: undefined,\n    },\n    {\n      title: 'Могут работать во вредных условиях, показатели защищенности до IP69.',\n      text: undefined,\n    },\n    {\n      title: 'Универсальны, легко перенастраиваются на другой тип работы. Могут менять инструменты.',\n      text: undefined,\n    },\n    {\n      title: `\n        Могут оснащаться быстросъемными инструментами, что увеличивает количество операций на одном\n        рабочем месте, например, сверловка отверстий, далее смена инструмента и полировка поверхности.\n      `,\n      text: undefined,\n    },\n  ],\n  cons: [\n    {\n      title: 'Во время работы опасны для человека, поэтому требуют установки защитных ограждений.',\n      text: undefined,\n    },\n    {\n      title: 'Высокая стоимость, высокое энергопотребление.',\n      text: undefined,\n    },\n    {\n      title: 'Их монтаж сопряжен со значительными подготовительным работами:',\n      text: `\n        Подводка мощного электропитания, перестановка станков, в некоторых случаях бетонирование фундамента под тяжелого робота.\n      `,\n    },\n  ],\n};\n\nexport const automationCobotInfo: AutomationInfo = {\n  title: 'Автоматизация \\n на коллаборативных роботах',\n  textLeftColumn: `\n    Коллаборативные роботы, они же коботы, специально созданы для взаимодействия с человеком.\n    Это устройства небольшого размера. Основное отличие их от промышленных роботов - то, что\n    они останавливаются при прикасании к любому препятствию, например, к ладони - то есть\n    не смогут навредить человеку или разрушить предметы, находящиеся в рабочей зоне.<br/>\n    <br/>\n    Они заметно дешевле промышленных роботов, обладают меньшей скоростью и грузоподъёмностью\n    (до 16 кг, перемещаются со скоростью до 1 м/с) и питаются от обычной розетки. Применяются,\n    как правило, в сервисных целях или в таких производственных операциях, где не требуется\n    перемещение больших тяжестей.\n  `,\n  textRightColumn: `\n    Коботы сертифицированы TUV NORD по стандарту ISO 10218-1, а функции безопасности\n    оцениваются Cat.3 PL d согласно стандарту ISO 13849-1. Они могут работать вместе\n    с людьми на производственной линии. Все это достигается благодаря настраиваемым\n    функциям безопасности.<br/>\n    <br/>\n    Их можно легко программировать за счет 'показа' роботу необходимых движений\n    оператором. Человек перемещает манипулятор руками по желательным траекториям\n    в необходимые позиции. По окончании обучения робот оптимизирует траектории\n    и будет готов повторять эти движения самостоятельно.<br/>\n    <br/>\n    Особенно хорошо они могут выполнять повторяющиеся действия, такие, как выбор,\n    расстановка, упаковка, нанесение клея или пайка.\n  `,\n  pros: [\n    {\n      title: 'Могут работать во вредных условиях.',\n      text: undefined,\n    },\n    {\n      title: 'Могут работать совместно с человеком на одной производственной линии.',\n      text: 'Безопасны для людей. Не требуют значительных выделенных площадей и огораживания периметра безопасности, невелики по размеру - это позволяет использовать роботов в помещении с людьми (хотя по российским нормативным актам они всё равно должны быть огорожены, как и промышленные роботы).',\n    },\n    {\n      title: 'Не нужно менять технологический процесс.',\n      text: 'Небольшие размеры и вес (до 40 кг) позволяют легко перемещать коботов между рабочими местами. Легко масштабируются.',\n    },\n    {\n      title: 'Удобны для использования в малом и среднем бизнесе.',\n      text: 'Их внедрение не требует больших инвестиций.',\n    },\n    {\n      title: 'Не выдвигают особых требований к условиям эксплуатации.',\n      text: 'Могут устанавливаться, например, на воздушных судах или в обычных квартирах. Не требуют специальных условий по электропитанию, достаточно простой розетки с заземлением. Могут монтироваться на обычный стол.',\n    },\n    {\n      title: 'Сравнительно низкая цена.',\n      text: 'Просты в развертывании и интеграции. Легко обучаются.',\n    },\n    {\n      title: 'Универсальны, легко перенастраиваются на другой тип работы',\n      text: 'Могут оснащаться быстросъемными инструментами, что увеличивает количество операций на одном рабочем месте. Например, сверловка отверстий, далее смена инструмента и полировка поверхности.',\n    },\n  ],\n  cons: [\n    {\n      title: 'Не могут выполнять тяжёлую работу',\n      text: 'Малый радиус размаха, до 1,3 метров. Малая скорость по сравнению с промышленными роботами.',\n    },\n  ],\n};\n\nexport const specialists = [\n  {\n    name: 'Александр \\nКоваленко',\n    position: 'Директор',\n    responsibilities: 'Вопросы стратегического взаимодействия',\n    tel: '+7 (9299) 508-819',\n    email: 'ak@fv.dev',\n    image: imageSpecialist1,\n  },\n  {\n    name: 'Иван \\nКрашенинников',\n    position: 'Менеджер отдела продаж',\n    responsibilities: 'Договорные отношения',\n    tel: '+7 (9272) 705-678',\n    email: 'ik@fv.dev',\n    image: imageSpecialist2,\n  },\n  {\n    name: 'Леонид \\nКашин',\n    position: 'Data Scientist',\n    responsibilities: 'Нейросети и машинное зрение',\n    tel: '+7 (9299) 508-819',\n    email: 'ak@fv.dev',\n    image: imageSpecialist4,\n  },\n  {\n    name: 'Евгений \\nТихонов',\n    position: 'Главный конструктор',\n    responsibilities: 'Архитектура решений',\n    tel: '+7 (9299) 508-819',\n    email: 'ak@fv.dev',\n    image: imageSpecialist5,\n  },\n  {\n    name: 'Андрей \\nСкок',\n    position: 'зам. директора по АСУ',\n    responsibilities: 'Внедрение, логистика',\n    tel: '+7 (9299) 508-819',\n    email: 'ak@fv.dev',\n    image: imageSpecialist6,\n  },\n];\n","import React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  Modal,\n  Typography,\n  Slider,\n  Image,\n} from 'components';\n\nimport { ModalContainerProps } from 'components/_shared/Modal';\nimport { industries, industryMedia } from 'constants/home-page';\nimport { colors, StylesForScrollbar } from 'styles/variables';\nimport { css } from '@emotion/react';\nimport { Industries } from 'types/home-page';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 1044px;\n  padding: 80px 125px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  ${StylesForScrollbar};\n`;\n\nconst Title = styled<React.FC>((props) => <Typography variant='h1' {...props} />)`\n  margin-bottom: 40px;\n  align-self: flex-start;\n  text-transform: capitalize;\n`;\n\nconst CurrentVideoTitle = styled<React.FC>((props) => <Typography variant='h3' {...props} />)`\n  margin-bottom: 40px;\n  align-self: flex-start;\n`;\n\nconst VideoTitle = styled<React.FC>((props) => <Typography variant='subtitle2' {...props} />)`\n\n`;\n\nconst StyledButton = styled.button`\n  display: flex;\n  flex-direction: column;\n  text-align: start;\n  width: 180px;\n  min-width: 180px;\n  padding: 0 12px;\n  background: none;\n  border: none;\n  outline: none;\n\n  &:hover {\n    cursor: pointer;\n\n    ${VideoTitle} {\n      color: ${colors.forestGreen100};\n    }\n  }\n`;\n\nconst StyledImg = styled(Image)`\n  min-height: 118px;\n  margin-bottom: 16px;\n`;\n\ninterface IndustryMediaModalProps extends ModalContainerProps {\n  mediaId?: Industries;\n}\n\nconst IndustryMediaModal: React.FC<IndustryMediaModalProps> = (props) => {\n  const {\n    mediaId,\n  } = props;\n\n  const [state, setState] = useState<{ id: string; title: string; }[]>([]);\n  const [activeMedia, setActiveMedia] = useState<number>(0);\n\n  useEffect(() => {\n    mediaId && setState(industryMedia[mediaId]);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  return (\n    <Modal {...props}>\n      <Container>\n        <Title>\n          {mediaId && industries[mediaId].title}\n        </Title>\n\n        {!!state.length && (\n          <>\n            <iframe\n              css={css`\n                margin-bottom: 24px;\n              `}\n              width='100%'\n              height='445'\n              src={`https://www.youtube.com/embed/${state[activeMedia].id}`}\n              title='YouTube video player'\n              frameBorder='0'\n              allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\n              allowFullScreen\n            >\n            </iframe>\n\n            <CurrentVideoTitle>\n              {state[activeMedia].title}\n            </CurrentVideoTitle>\n          </>\n        )}\n\n        <Slider>\n          {state.map((item, index) => {\n            const {\n              id,\n              title,\n            } = item;\n\n            return (\n              <StyledButton key={id} onClick={() => setActiveMedia(index)}>\n                <StyledImg\n                  publicUrl={`https://img.youtube.com/vi/${id}/default.jpg`}\n                  alt='thumbnail'\n                />\n\n                <VideoTitle\n                  css={css`\n                    color: ${activeMedia === index && colors.forestGreen200};\n                  `}\n                >\n                  {title}\n                </VideoTitle>\n              </StyledButton>\n            );\n          })}\n        </Slider>\n      </Container>\n    </Modal>\n  );\n};\n\nexport default IndustryMediaModal;\n","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { lighten } from 'polished';\n\nimport { ButtonCorner, Container, Typography } from 'components';\nimport { colors } from 'styles/variables';\nimport { industriesBlocks, industryMedia } from 'constants/home-page';\n\nimport IndustryMediaModal from './IndustryMediaModal';\nimport { Industries } from 'types/home-page';\n\nconst Wrapper = styled(Container)`\n  align-items: center;\n`;\n\nconst Title = styled<React.FC>((props) => <Typography variant='h1' {...props} />)`\n  margin-bottom: 60px;\n  color: ${colors.header};\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    font-family: Roboto;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 24px;\n    letter-spacing: 0.005em;\n    text-align: center;\n  }\n`;\n\nconst IndustryTilesContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: -24px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst IndustryItemContainer = styled.div`\n  position: relative;\n  width: 384px;\n  margin-bottom: 24px;\n  margin-right: 24px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 85%;\n\n    margin-bottom: 24px;\n    margin-right: 0px;\n  }\n\n  &:nth-of-type(3n) {\n    margin-right: 0;\n  }\n`;\n\nconst IndustryMainContainer = styled.div`\n  height: 188px;\n  padding: 40px 32px;\n  border-radius: 3px;\n  background-color: ${colors.white};\n  box-shadow: 0px 4px 30px rgba(0,0,0,0.2);\n`;\n\nconst IndustryItemHeader = styled<React.FC>((props) => <Typography variant='subtitle1' {...props} />)`\n  margin-bottom: 16px;\n  text-transform: uppercase;\n  color: ${colors.header};\n`;\n\nconst IndustryTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n`;\ninterface IndustryTagProps {\n  color: string;\n}\nconst IndustryTag = styled.button<IndustryTagProps>`\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n  justify-content: center;\n  height: 24px;\n  padding: 0 10px;\n  background-color: ${props => props.color};\n  border: none;\n  outline: none;\n\n  &:hover, &:focus {\n    cursor: pointer;\n    background-color: ${props => lighten(0.03, props.color)};\n  }\n`;\n\nconst IndustryMediaButton = styled(ButtonCorner)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  border-top-right-radius: 3px;\n`;\n\ninterface IndustryItemProps {\n  id: Industries;\n  title: string;\n  text: string;\n  tags: {\n    title: string;\n    color: string;\n    url: string;\n  }[];\n  onOpen: () => void;\n}\n\nconst IndustryItem: React.FC<IndustryItemProps> = (props) => {\n  const {\n    id,\n    title,\n    text,\n    tags,\n    onOpen,\n  } = props;\n\n  const isMediaNotEmpty = industryMedia[id].length > 0;\n\n  return (\n    <IndustryItemContainer>\n      <IndustryMainContainer>\n        <IndustryItemHeader>{title}</IndustryItemHeader>\n\n        <Typography variant='body2'>{text}</Typography>\n\n        {isMediaNotEmpty && <IndustryMediaButton onClick={() => onOpen()} />}\n      </IndustryMainContainer>\n\n      <IndustryTags>\n        {tags.map((item) => {\n\n          return (\n            <IndustryTag color={item.color} key={item.title}>\n              <Typography variant='caption'>\n                {item.title}\n              </Typography>\n            </IndustryTag>\n          );\n        })}\n      </IndustryTags>\n    </IndustryItemContainer>\n  );\n};\n\ninterface MediaModalState {\n  isShown: boolean;\n  mediaId?: Industries;\n}\n\nconst IndustriesBlock: React.FC = () => {\n  const [modalState, setModalState] = useState<MediaModalState>({\n    isShown: false,\n    mediaId: undefined,\n  });\n\n  const closeModal = () => setModalState({\n    isShown: false,\n    mediaId: undefined,\n  });\n\n  return (\n    <Wrapper>\n      <Title>\n        Где применяются роботы?\n      </Title>\n\n      <IndustryTilesContainer>\n        {industriesBlocks.map((item) => {\n          const {\n            title,\n            text,\n            mediaId,\n            tags,\n          } = item;\n\n          return (\n            <IndustryItem\n              key={mediaId}\n              id={mediaId}\n              title={title}\n              text={text}\n              tags={tags}\n              onOpen={() => setModalState({\n                isShown: true,\n                mediaId,\n              })}\n            />\n          );\n        })}\n      </IndustryTilesContainer>\n\n      {modalState.isShown && (\n        <IndustryMediaModal\n          isShown={true}\n          onClose={() => closeModal()}\n          mediaId={modalState.mediaId}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default IndustriesBlock;\n","export default __webpack_public_path__ + \"static/high-five-cf4c101d5354e11213a63c763c2bfdd0.png\";","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { Button, Container, Typography } from 'components';\nimport { colors } from 'styles/variables';\nimport imageHighFive from 'images/high-five.png';\n\nconst Wrapper = styled(Container)`\n  flex-direction: row;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: auto;\n  //margin-left: 16px;\n  //margin-right: 18px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    padding: 0;\n  }\n`;\n\nconst DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0 128px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    width: 85%;\n\n    padding: 0;\n    margin-top: 50px;\n    //margin-left: 16px;\n    //margin-right: 18px;\n  }\n`;\n\nconst Title = styled<React.FC>((props) => <Typography variant='h1' {...props} />)`\n  margin-bottom: 40px;\n  color: ${colors.header};\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    font-family: Roboto;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 24px;\n    letter-spacing: 0.005em;\n    text-align: left;\n  }\n`;\n\nconst Text = styled<React.FC>((props) => <Typography variant='body1' {...props} />)`\n  margin-bottom: 50px;\n`;\n\ninterface Props {\n  showRequestModal: () => void;\n}\n\nconst DemonstrationBlock = (props: Props) => {\n  const {\n    showRequestModal,\n  } = props;\n\n  return (\n    <Wrapper>\n      <ImageContainer>\n        <img\n          src={imageHighFive}\n          alt='High five'\n          width={((typeof window !== \"undefined\")) ? window.screen.width >= 320 && window.screen.width <= 480 ? '100%' : 484 : '100%'}\n          height={(typeof window !== \"undefined\") ? (window.screen.width >= 320 && window.screen.width <= 480) ? 'auto' : 368 : 'auto'}\n        />\n      </ImageContainer>\n\n      <DescriptionContainer>\n        <Title>\n          Кобот у Вас в гостях!\n        </Title>\n\n        <Text>\n          Лучше один раз увидеть, чем сто раз прочитать. <br />\n          Устроим онлайн показ работы паллетайзера. <br />\n          Приедем к вам на предприятие и вживую продемонстрируем\n          работу кобота на участке! <br />\n          Ответим на все вопросы.\n        </Text>\n\n        <Button onClick={showRequestModal}>\n          Пригласить нас\n        </Button>\n\n      </DescriptionContainer>\n    </Wrapper>\n  );\n};\n\nexport default DemonstrationBlock;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { ComponentBaseProps } from 'types/components';\n\nconst IPlus: React.FC<ComponentBaseProps> = (props) => {\n  return (\n    <svg width='24' height='25' viewBox='0 0 24 25' fill='none' xmlns='http://www.w3.org/2000/svg' {...props}>\n      <path fillRule='evenodd' clipRule='evenodd' d='M9.5 15V24.5H14.5V15H24V10H14.5V0.5H9.5V10H0V15H9.5Z' fill='currentColor' />\n    </svg>\n  );\n};\n\nexport default IPlus;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { Typography } from 'components';\n\nimport IPlus from 'icons/IPlus';\n\nimport { colors } from 'styles/variables';\n\nconst ContentContainer = styled.div`\n  padding: 80px 100px 0 100px;\n`;\n\nconst Title = styled<React.FC>((props) => <Typography variant='h1' {...props} />)`\n  margin-bottom: 40px;\n  text-align: center;\n  align-self: center;\n  color: ${colors.header};\n  white-space: pre-line;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    font-family: Roboto;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 28px;\n    letter-spacing: 0.005em;\n    text-align: center;\n  }\n`;\n\nconst FeaturesTitle = styled<React.FC>((props) => <Typography variant='h2' {...props} />)`\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    padding-left: 16px;\n    margin-bottom: 30px;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: baseline;\n  }\n`;\n\nconst SignContainer = styled.div`\n  margin-left: 28px;\n`;\n\nconst Text = styled<React.FC>((props) => <Typography variant='body1' {...props} />)`\n  margin-right: 25px;\n  width: 408px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    margin-right: 0;\n    width: 85%;\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst TextContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 76px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst FeatureContainer = styled.div`\n  padding-left: 88px;\n  margin-bottom: 70px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    padding-left: 0;\n  }\n`;\n\nconst FeaturesInnerContainer = styled.div`\n  margin-bottom: 76px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Circle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  position: absolute;\n  top: 50%;\n  left: -28px;\n  transform: translate(-100%, -50%);\n  color: ${colors.white};\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    position: relative;\n    top: auto;\n    left: auto;\n\n    transform: none;\n  }\n`;\n\nconst ProsIcon = styled(Circle)`\n  background-color: ${colors.teal100};\n`;\n\nconst ConsIcon = styled(Circle)`\n  background-color: ${colors.miscellaneous.yellow200};\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 24px;\n    height: 5px;\n    background-color: ${colors.white};\n  }\n`;\n\nconst StyledFeatureItem = styled.li`\n  position: relative;\n  margin-bottom: 16px;\n\n  div:first-line {\n    color: ${colors.header};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: -24px;\n    top: 8px;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background-color: ${colors.teal100};\n  }\n`;\n\nconst FeaturesList = styled.ul`\n  padding-left: 24px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    padding-left: 41px;\n    padding-right: 19px;\n  }\n`;\n\ninterface FeaturesListItemProps {\n  title: string;\n  text?: string;\n}\n\nconst FeaturesListItem: React.FC<FeaturesListItemProps> = (props) => {\n  const {\n    title,\n    text,\n  } = props;\n\n  return (\n    <StyledFeatureItem>\n      <Typography>\n        {title} <br />\n        {text}\n      </Typography>\n    </StyledFeatureItem>\n  );\n};\n\ninterface Props {\n  title: string;\n  textLeftColumn: string;\n  textRightColumn: string;\n  pros: FeaturesListItemProps[];\n  cons: FeaturesListItemProps[];\n}\n\nconst AutomationCobotInfo = (props: Props) => {\n  const {\n    title,\n    textLeftColumn,\n    textRightColumn,\n    pros,\n    cons,\n  } = props;\n\n  return (\n    <ContentContainer>\n      <Title>\n        {title}\n      </Title>\n\n      <TextContainer>\n        <Text>\n          <div dangerouslySetInnerHTML={{\n            __html: textLeftColumn,\n          }} />\n        </Text>\n\n        <Text>\n          <div dangerouslySetInnerHTML={{\n            __html: textRightColumn,\n          }} />\n        </Text>\n      </TextContainer>\n\n      <FeatureContainer>\n        <FeaturesInnerContainer>\n          <FeaturesTitle>\n            <ProsIcon><IPlus /></ProsIcon>\n\n            <SignContainer>\n              Плюсы\n            </SignContainer>\n          </FeaturesTitle>\n\n          <FeaturesList>\n            {pros.map((item) => <FeaturesListItem key={item.title} {...item} />)}\n          </FeaturesList>\n        </FeaturesInnerContainer>\n\n        <FeaturesInnerContainer>\n          <FeaturesTitle>\n            <ConsIcon>-</ConsIcon>\n\n            <SignContainer>\n              Минусы\n            </SignContainer>\n          </FeaturesTitle>\n\n          <FeaturesList>\n            {cons.map((item) => <FeaturesListItem key={item.title} {...item} />)}\n          </FeaturesList>\n        </FeaturesInnerContainer>\n      </FeatureContainer>\n    </ContentContainer>\n  );\n};\n\nexport default AutomationCobotInfo;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport { css } from '@emotion/react';\n\nimport { Button, Typography } from 'components';\n\nimport { automationCNCInfo, automationCobotInfo, automationIndustrialRobotInfo, } from 'constants/home-page';\nimport { colors, dimensions, StylesForScrollbar } from 'styles/variables';\n\nimport { Modal } from 'components';\nimport { automationItemIds } from 'constants/home-page';\nimport { ModalContainerProps } from 'components/_shared/Modal';\nimport { AutomationIdTypes } from 'types/home-page';\n\nimport AutomationCobotInfo from './AutomationModalContent';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 1044px;\n  overflow-y: auto;\n  ${StylesForScrollbar};\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 100%;\n  }\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  padding: 60px 0 80px 218px;\n  background-color: ${colors.miscellaneous.gray600};\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n\n    padding: 0;\n    padding-bottom: 55px;\n  }\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FooterLeftColumn = styled(Flex)`\n  z-index: 1;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst FooterRightColumn = styled(Flex)`\n  width: 310px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    margin-top: 30px;\n\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst FooterTitle = styled<React.FC>((props) => <Typography variant='h2' {...props} />)`\n  margin-bottom: 62px;\n  text-transform: uppercase;\n  color: ${colors.header};\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    margin-top: 55px;\n    margin-bottom: 42px;\n  }\n`;\n\nconst FooterCaption = styled<React.FC>((props) => <Typography variant='h3' {...props} />)`\n  margin-top: 23px;\n  margin-bottom: 28px;\n  color: ${colors.miscellaneous.green400};\n`;\n\nconst FooterImageStyles = css`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  z-index: 0;\n`;\n\nconst FooterContactTel = styled.a`\n  margin-bottom: 8px;\n  font-weight: ${dimensions.weights.normal1};;\n  font-size: ${dimensions.headingSizes.h2};\n  line-height: ${dimensions.lineHeight.body2};\n  color: ${colors.header};\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    font-family: Roboto;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 22px;\n    letter-spacing: 0.005em;\n    text-align: left;\n  }\n`;\n\nconst FooterContactsEmail = styled.a`\n  font-size: ${dimensions.fontSize.body1};\n  line-height: ${dimensions.lineHeight.body1};\n  color: ${colors.text};\n`;\n\ninterface AutomationModalProps extends ModalContainerProps {\n  automationId?: AutomationIdTypes;\n  showRequestModal: () => void;\n}\n\ninterface AutomationModalInfoProps {\n  title: string;\n  textLeftColumn: string;\n  textRightColumn: string;\n  pros: { title: string; text?: string; }[];\n  cons: { title: string; text?: string; }[];\n}\n\nconst AutomationModal: React.FC<AutomationModalProps> = (props) => {\n  const {\n    automationId,\n    showRequestModal,\n  } = props;\n\n  const getModalContentProps = (id: string): AutomationModalInfoProps => {\n    switch (id) {\n      case automationItemIds.CNC:\n        return automationCNCInfo;\n      case automationItemIds.INDUSTRIAL_ROBOT:\n        return automationIndustrialRobotInfo;\n      case automationItemIds.COBOTS:\n        return automationCobotInfo;\n      default:\n        return {\n          title: '',\n          textLeftColumn: '',\n          textRightColumn: '',\n          pros: [],\n          cons: [],\n        };\n    };\n  };\n\n  return (\n    <Modal {...props}>\n      <Wrapper>\n        {automationId && <AutomationCobotInfo {...getModalContentProps(automationId)} />}\n\n        <Footer>\n          <FooterLeftColumn>\n            <FooterTitle>\n              Робот готов работать <br />\n              без зарплаты!\n            </FooterTitle>\n\n            <Button onClick={() => showRequestModal()}>\n              Получить консультацию\n            </Button>\n          </FooterLeftColumn>\n\n          <FooterRightColumn>\n            <FooterCaption>\n              Остались вопросы? <br />\n              Звоните!\n            </FooterCaption>\n\n            <FooterContactTel href='tel:+7 (9272) 705-678'>\n              +7 (9272) 705-678\n            </FooterContactTel>\n\n            <FooterContactsEmail href='mailto:ik@fv.dev'>\n              ik@fv.dev\n            </FooterContactsEmail>\n\n          </FooterRightColumn>\n\n          {(typeof window !== \"undefined\") ? (window.screen.width >= 320 && window.screen.width <= 480) ? null :\n            <StaticImage\n              css={FooterImageStyles}\n              src='../../images/robot5.png'\n              alt='robot'\n            />\n          : null\n          }\n        </Footer>\n      </Wrapper>\n    </Modal>\n  );\n};\n\nexport default AutomationModal;\n","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\n\nimport { Button, Container, Typography } from 'components';\nimport { automationItems } from 'constants/home-page';\nimport { colors } from 'styles/variables';\nimport { AutomationIdTypes } from 'types/home-page';\nimport AutomationModal from './AutomationModal';\n\nconst Wrapper = styled(Container)`\n  align-items: center;\n`;\n\nconst Title = styled<React.FC>((props) => <Typography variant='h1' {...props} />)`\n  margin-bottom: 40px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    margin-left: 16px;\n    margin-right: 18px;\n\n    font-family: Roboto;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 24px;\n    letter-spacing: 0.005em;\n    text-align: center;\n\n  }\n`;\n\nconst Text = styled<React.FC>((props) => <Typography variant='body1' {...props} />)`\n  margin-bottom: 60px;\n  padding: 0 220px;\n  text-align: center;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    padding: 0;\n\n    margin-left: 16px;\n    margin-right: 18px;\n\n    //styleName: Body 1;\n    font-family: Roboto;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 26px;\n    letter-spacing: 0em;\n    text-align: center;\n\n  }\n`;\n\nconst AutomationTilesContainer = styled.div`\n  display: flex;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst TileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 652px;\n  margin-right: 25px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    margin-right: 0;\n\n    justify-content: center;\n    align-items: center;\n  }\n\n  &:nth-of-type(3) {\n    margin-right: 0;\n  }\n`;\n\nconst ImageContainer = styled.div`\n  width: 100%;\n  position: relative;\n  margin-bottom: 25px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst AutomationItemTitle = styled<React.FC>((props) => <Typography variant='h3' {...props} />)`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  color: ${colors.black};\n  white-space: pre-line;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    left: 9%;\n    font-size: 17px;\n  }\n`;\n\n\nconst AutomationItemText = styled<React.FC>((props) => <Typography variant='body2' {...props} />)`\n  padding-right: 78px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    padding-right: 0;\n\n    width: 85%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  margin-top: auto;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    margin-top: 40px;\n  }\n`;\n\ninterface AutomationTileProps {\n  title: string;\n  text: string;\n  onOpen: () => void;\n  image: string;\n}\n\nconst AutomationTile: React.FC<AutomationTileProps> = (props) => {\n  const {\n    title,\n    text,\n    onOpen,\n    image,\n  } = props;\n\n  return (\n    <TileContainer>\n      <ImageContainer>\n        <img\n          src={image}\n          width={((typeof window !== \"undefined\")) ? window.screen.width >= 320 && window.screen.width <= 480 ? '85%' : 384 : '85%'}\n          height={(typeof window !== \"undefined\") ? (window.screen.width >= 320 && window.screen.width <= 480) ? 'auto' : 485 : 'auto'}\n          alt='robot'\n        />\n        <AutomationItemTitle>{title}</AutomationItemTitle>\n      </ImageContainer>\n\n      <AutomationItemText>\n        {text}\n      </AutomationItemText>\n\n      <StyledButton\n        variant='text'\n        onClick={() => onOpen()}\n      >\n        Подробнее\n      </StyledButton>\n    </TileContainer>\n  );\n};\n\ninterface AutomationModalState {\n  isShown: boolean;\n  automationId?: AutomationIdTypes;\n}\n\ninterface AutomationBlockProps {\n  showRequestModal: () => void;\n}\n\nconst AutomationBlock: React.FC<AutomationBlockProps> = (props) => {\n  const {\n    showRequestModal,\n   } = props;\n\n  const [modalState, setModalState] = useState<AutomationModalState>({\n    isShown: false,\n    automationId: undefined,\n  });\n\n  const closeModal = () => setModalState({\n    isShown: false,\n    automationId: undefined,\n  });\n\n  return (\n    <Wrapper>\n      <Title>\n        Каких роботов вы используете?\n      </Title>\n      <Text>\n        Мы различаем три вида автоматизации: с использованием систем с ЧПУ, промышленных роботов\n        и коллаборативных роботов. У каждого подхода есть свои плюсы и минусы.\n      </Text>\n\n      <AutomationTilesContainer>\n        {automationItems.map((item) => {\n          const {\n            id,\n            ...rest\n          } = item;\n\n          return (\n            <AutomationTile\n              key={id}\n              onOpen={() => setModalState({\n                isShown: true,\n                automationId: id,\n              })}\n\n              {...rest}\n            />\n          );\n        })}\n      </AutomationTilesContainer>\n\n      {modalState.isShown && (\n        <AutomationModal\n          isShown={true}\n          onClose={() => closeModal()}\n          automationId={modalState.automationId}\n          showRequestModal={showRequestModal}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default AutomationBlock;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nimport { Container, Typography } from 'components';\nimport { colors } from 'styles/variables';\n\nconst Wrapper = styled(Container)`\n  position: relative;\n  align-items: center;\n  margin-top: 262px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    margin-top: 0;\n  }\n`;\n\nconst Title = styled<React.FC>((props) => <Typography variant='h2' {...props} />)`\n  margin-bottom: 24px;\n  color: ${colors.header};\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 85%;\n\n    margin-top: 30px;\n\n    font-family: Roboto;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 24px;\n    letter-spacing: 0.005em;\n    text-align: left;\n\n  }\n`;\n\nconst Text = styled<React.FC>((props) => <Typography variant='body1' {...props} />)`\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 85%;\n\n    //styleName: Body 1;\n    font-family: Roboto;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 26px;\n    letter-spacing: 0em;\n    text-align: left;\n  }\n`;\n\nconst DescriptionContainer = styled.div`\n  width: 1020px;\n  padding: 50px 77px 60px 280px;\n  background: linear-gradient(96.56deg, rgba(199, 233, 249, 0.312) 33.41%, rgba(232, 245, 233, 0.8) 62.54%);\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n    padding-bottom: 70px;\n  }\n`;\n\nconst RobotImageStyles = css`\n  position: absolute;\n  left: 0;\n  top: -122px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    position: relative;\n    left: auto;\n    top: auto;\n  }\n`;\n\nconst RobotInfoBlock: React.FC = () => {\n  return (\n    <Wrapper>\n      <DescriptionContainer>\n        <StaticImage\n          css={RobotImageStyles}\n          src='../../images/robot4.png'\n          alt='robot'\n        />\n        <Title>\n          Защита роботов от пыли и влаги\n        </Title>\n        <Text>\n          Промышленные роботы и коботы защищены по стандарту от IP54 до IP69.\n          Показатели свыше IP54 достигаются как конструктивно, так и с применением специальных\n          гибких кожухов. Роботы подходят для использования в пищевой промышленности, больничных\n          палатах и чистых комнатах (лаборатории, операционные и тп). Практически все модели можно\n          подвергнуть мойке струей воды.\n        </Text>\n      </DescriptionContainer>\n    </Wrapper>\n  );\n};\n\nexport default RobotInfoBlock;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { Container, Typography } from 'components';\nimport { colors, dimensions } from 'styles/variables';\nimport { specialists } from 'constants/home-page';\n\nconst Wrapper = styled(Container)`\n  align-items: center;\n`;\n\nconst Title = styled<React.FC>((props) => <Typography variant='h1' {...props} />)`\n  margin-bottom: 40px;\n  color: ${colors.header};\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    font-family: Roboto;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 24px;\n    letter-spacing: 0.005em;\n    text-align: center;\n  }\n`;\n\nconst Text = styled<React.FC>((props) => <Typography variant='body1' {...props} />)`\n  margin-bottom: 60px;\n  padding: 0 208px;\n  text-align: center;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    padding: 0;\n    width: 85%;\n  }\n`;\n\nconst SubTitle = styled<React.FC>((props) => <Typography variant='subtitle1' {...props} />)`\n  margin-bottom: 60px;\n  text-transform: uppercase;\n`;\n\nconst SpecialistImage = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst SpecialistImageContainer = styled.div`\n  position: relative;\n  width: 148px;\n  height: 148px;\n  margin-bottom: 38px;\n  background-color: ${colors.miscellaneous.gray400};\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nconst SpecialistContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 180px;\n  text-align: center;\n\n  &:nth-of-type(2) ${SpecialistImage} {\n    top: 57%;\n  }\n\n  &:nth-of-type(3) ${SpecialistImage} {\n    top: 53%;\n  }\n\n  &:nth-of-type(5) ${SpecialistImage} {\n    top: 58%;\n  }\n\n  &:nth-of-type(6) ${SpecialistImage} {\n    top: 58%;\n  }\n`;\n\nconst SpecialistsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst SpecialistName = styled<React.FC>((props) => <Typography variant='subtitle2' {...props} />)`\n  margin-bottom: 16px;\n  white-space: pre-line;\n`;\n\nconst Position = styled<React.FC>((props) => <Typography variant='body2' {...props} />)`\n  margin-bottom: 16px;\n`;\n\nconst Responsibilities = styled<React.FC>((props) => <Typography variant='body2' {...props} />)`\n  margin-bottom: 10px;\n`;\n\nconst Contacts = styled.a`\n  color: ${colors.teal300};\n  font-size: ${dimensions.fontSize.button};\n  line-height: ${dimensions.lineHeight.body2};\n\n  &:hover {\n    color: ${colors.teal100};\n    cursor: pointer;\n  };\n\n  &:active {\n    color: ${colors.teal300}\n  };\n`;\n\ninterface SpecialistProps {\n  name: string;\n  position: string;\n  responsibilities: string;\n  tel: string;\n  email: string;\n  image: string;\n}\n\nconst Specialist: React.FC<SpecialistProps> = (props) => {\n  const {\n    name,\n    position,\n    responsibilities,\n    tel,\n    email,\n    image,\n  } = props;\n\n  return (\n    <SpecialistContainer>\n      <SpecialistImageContainer>\n        <SpecialistImage\n          src={image}\n          alt={name}\n        />\n      </SpecialistImageContainer>\n\n      <SpecialistName>{name}</SpecialistName>\n\n      <Position>{position}</Position>\n\n      <Responsibilities>{responsibilities}</Responsibilities>\n\n      <Contacts href={`tel:${tel}`}>\n        {tel}\n      </Contacts>\n\n      <Contacts href={`mailto:${email}`}>\n        {email}\n      </Contacts>\n    </SpecialistContainer>\n  );\n};\n\nconst SpecialistsBlock: React.FC = () => {\n  return (\n    <Wrapper>\n      <Title>\n        Команда специалистов\n      </Title>\n      <Text>\n        Наша компания, Forest Valley, была основана в 2011 году как разработчик\n        сложных программных решений, в т.ч. для промышленных предприятий. Сильный\n        коллектив специалистов по автоматизации позволил создать отдел разработки\n        и интеграции роботизированных решений Forest Valley Robotics.\n      </Text>\n      <SubTitle>\n        Отдел автоматизации:\n      </SubTitle>\n\n      <SpecialistsContainer>\n        {specialists.map((item) => <Specialist key={item.name} {...item} />)}\n      </SpecialistsContainer>\n    </Wrapper>\n  );\n};\n\nexport default SpecialistsBlock;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { Typography, RequestForm } from 'components';\nimport { breakpoints, colors } from 'styles/variables';\nimport Container from 'components/_shared/Container';\n\nconst Wrapper = styled(Container)`\n  position: relative;\n  flex-direction: row;\n  justify-content: center;\n  margin-bottom: 0;\n\n  &:before {\n      content: '';\n      position: absolute;\n      z-index: 1;\n      top: 0px;\n      width: 100vw;\n      height: 1px;\n      background-color: ${colors.miscellaneous.gray700};\n    }\n`;\n\nconst Title = styled<React.FC>((props) => <Typography variant='h1' {...props} />)`\n  margin-bottom: 40px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    margin-top: 10px;\n\n    font-family: Roboto;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 24px;\n    letter-spacing: 0.005em;\n    text-align: left;\n  }\n`;\n\nconst Text = styled<React.FC>((props) => <Typography variant='subtitle1' {...props} />)`\n  text-transform: uppercase;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 100%;\n  }\n`;\n\nconst LeftColumn = styled(FlexContainer)`\n  padding-top: 181px;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    padding-top: 0;\n    width: 85%;\n\n    margin-bottom: 40px;\n  }\n`;\n\nconst RightColumn = styled(FlexContainer)`\n  position: relative;\n  padding: 125px 0 132px 0;\n  background-color: ${colors.miscellaneous.gray600};\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    padding: 0;\n    padding-top: 50px;\n    width: 100%;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 1px;\n    transform: translateX(-100%);\n    height: 100%;\n    width: 103px;\n    background-color: ${colors.miscellaneous.gray600};\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translateX(100%);\n    height: 100%;\n    width: 100vw;\n    background-color: ${colors.miscellaneous.gray600};\n\n    @media (max-width: ${breakpoints.sm}px) {\n      width: unset;\n    }\n  }\n`;\n\nconst RequestBlock: React.FC = () => {\n  return (\n    <Wrapper>\n      <LeftColumn>\n        <Title>\n          Хотите узнать больше? <br />\n          Давайте созвонимся!\n        </Title>\n\n        <Text>\n          Запишитесь на консультацию,<br />\n          заполните форму\n        </Text>\n      </LeftColumn>\n\n      <RightColumn>\n        <RequestForm />\n      </RightColumn>\n    </Wrapper>\n  );\n};\n\nexport default RequestBlock;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  Modal,\n  RequestForm,\n  Typography,\n} from 'components';\n\nimport { ModalContainerProps } from 'components/_shared/Modal';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 80px 102px 120px 102px;\n`;\n\nconst Title = styled<React.FC>((props) => <Typography variant='subtitle1' {...props} />)`\n  margin-bottom: 40px;\n  text-transform: uppercase;\n  align-self: flex-start;\n`;\n\nconst RequestModal: React.FC<ModalContainerProps> = (props) => {\n  const {\n    onClose,\n  } = props;\n\n  return (\n    <Modal {...props}>\n      <Container>\n        <Title>\n          Заявка на получение консультации\n        </Title>\n\n        <RequestForm onClose={onClose} />\n      </Container>\n    </Modal>\n  );\n};\n\nexport default RequestModal;\n","import React, { useState } from 'react';\n\nimport IndexLayout from 'layouts';\nimport {\n  Page,\n} from 'components';\n\nimport IntroBlock from 'components/home-page/IntroBlock';\nimport DescriptionBlock from 'components/home-page/DescriptionBlock';\nimport IndustriesBlock from 'components/home-page/IndustriesBlock';\nimport DemonstrationBlock from 'components/home-page/DemonstrationBlock';\nimport AutomationBlock from 'components/home-page/AutomationBlock';\n// import OnlineDemonstrationBlock from 'components/home-page/OnlineDemonstrationBlock'; //Temporarily removed\nimport RobotInfoBlock from 'components/home-page/RobotInfoBlock';\nimport SpecialistsBlock from 'components/home-page/SpecialistsBlock';\nimport RequestBlock from 'components/home-page/RequestBlock';\nimport RequestModal from 'components/home-page/RequestModal';\n\nconst IndexPage = () => {\n  const [isRequestModalShown, toggleRequestModal] = useState<boolean>(false);\n\n  return (\n    <IndexLayout>\n      <Page>\n        <IntroBlock showRequestModal={() => toggleRequestModal(true)} />\n        <DescriptionBlock />\n        <IndustriesBlock />\n        <DemonstrationBlock showRequestModal={() => toggleRequestModal(true)}/>\n        <AutomationBlock showRequestModal={() => toggleRequestModal(true)} />\n        {/* <OnlineDemonstrationBlock /> //Temporarily removed */}\n        <RobotInfoBlock />\n        <SpecialistsBlock />\n        <RequestBlock />\n      </Page>\n\n      <RequestModal\n        isShown={isRequestModalShown}\n        onClose={() => toggleRequestModal(false)}\n      />\n    </IndexLayout>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}